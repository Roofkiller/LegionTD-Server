@page "{site:int?}"
@using LegionTDServerReborn.Models
@using Microsoft.AspNetCore.Html
@using LegionTDServerReborn.Extension
@using LegionTDServerReborn.Helpers
@model MatchesModel
@{
    ViewData["Title"] = "Last Matches";
}
<h2>@ViewData["Title"]</h2>

<p>
    @if (Model.Site > 1) {
        <a href="/Matches/1" class='matches-site'>« First</a>
        <a href="/Matches/@(Model.Site - 1)" class='matches-site'>‹ Prev</a>
    }
    @if (Model.Site >= 6) {
        <span clkass='matches-site'>...</span>
    }
    @{
        for (int i = Model.Site - 4; i < Model.Site; i++) {
            if (i <= 0) {
                continue;
            }
            <a href='/Matches/@i' class='matches-site'>@i</a>
        }
    }
    <span class='matches-site matches-site-current'>@Model.Site</span>
    @{
        for (int i = Model.Site + 1; i <= Model.Site + 4; i++) {
            if (i >= Model.PageCount - 1) {
                continue;
            }
            <a href='/Matches/@i' class='matches-site'>@i</a>
        }
    }
    @if (Model.Site < Model.PageCount - 4) {
        <span clkass='matches-site'>...</span>
    }
    @if (Model.Site < Model.PageCount) {
        <a href="/Matches/@(Model.Site + 1)" class='matches-site'>Next ›</a>
        <a href="/Matches/@(Model.PageCount)" class='matches-site'>Last »</a>
    }
</p>
<div class='table-responsive'>
    <table class="table table-responsive table-hover table-striped">
        <thead>
            <td>
                Match ID
            </td>
            <td>
                Date
            </td>
            <td>
                Duration
            </td>
            <td>
                Winner
            </td>
            <td>
                Last Wave
            </td>
        </thead>
        <tbody id="match_table_body">
            @{
                Func<Match, IHtmlContent> printMatch = 
                    @<tr class='clickable-row' data-href='/Match/@item.MatchId'>
                        <td>@item.MatchId</td>
                        <td>@item.GetFormattedDate()</td>
                        <td>@item.GetFormattedTime()</td>
                        <td>@Html.TeamToHtml(item.Winner)</td>
                        <td>@item.LastWave</td>
                    </tr>;
                foreach(var match in @Model.Matches) {
                    @printMatch(match)
                }
            }
        </tbody>
    </table>
</div>
<p class='text-right matches-indicator'>
    @((Model.Site-1) * MatchesModel.MatchesPerSite + 1) - @(Model.Site * MatchesModel.MatchesPerSite) of @Model.MatchCount
</p>
<p>
    @if (Model.Site > 1) {
        <a href="/Matches/1" class='matches-site'>« First</a>
        <a href="/Matches/@(Model.Site - 1)" class='matches-site'>‹ Prev</a>
    }
    @if (Model.Site >= 6) {
        <span clkass='matches-site'>...</span>
    }
    @{
        for (int i = Model.Site - 4; i < Model.Site; i++) {
            if (i <= 0) {
                continue;
            }
            <a href='/Matches/@i' class='matches-site'>@i</a>
        }
    }
    <span class='matches-site matches-site-current'>@Model.Site</span>
    @{
        for (int i = Model.Site + 1; i <= Model.Site + 4; i++) {
            if (i >= Model.PageCount - 1) {
                continue;
            }
            <a href='/Matches/@i' class='matches-site'>@i</a>
        }
    }
    @if (Model.Site < Model.PageCount - 4) {
        <span clkass='matches-site'>...</span>
    }
    @if (Model.Site < Model.PageCount) {
        <a href="/Matches/@(Model.Site + 1)" class='matches-site'>Next ›</a>
        <a href="/Matches/@(Model.PageCount)" class='matches-site'>Last »</a>
    }
</p>

@section scripts {
    <script>
        $(function () {
            $(".clickable-row").click(function() {
                    window.location = $(this).data("href");
                });
        });
    </script>
}
