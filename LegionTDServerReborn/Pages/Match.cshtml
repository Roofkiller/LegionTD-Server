@page "{matchId:int}"
@using LegionTDServerReborn.Models
@using LegionTDServerReborn.Extension
@using LegionTDServerReborn.Helpers
@using Microsoft.AspNetCore.Html
@model MatchModel
@{
    ViewData["Title"] = "Match #" + @Model.MatchId;
}

<div class='match-header row'>
    <div class='col-lg-3 col-md-4 match-title'>
        <span class='match-title'>Match #@Model.MatchId</span>
    </div>
    <div class='col-lg-9 col-md-8 col-sm-12 col-xs-12' style="">
        <div id='match_info' style="">
            @{
                var data = new Dictionary<string, string>();
                data["Date"] = @Model.Match.GetFormattedDate();
                data["Duration"] = @Model.Match.GetFormattedTime();
                var winner = @Model.Match.Winner.GetTeamName();
                data["Winner"] = @Html.TeamToHtml(@Model.Match.Winner).Value;
                data["Last Wave"] = @Model.Match.LastWave.ToString();

                foreach(var pair in data) {
                    <div class='col-md-3 col-sm-3 col-xs-6 match-info'>
                        <p class='match-info-title text-center'>@pair.Key</p>
                        <p class='match-info-value text-center'>@Html.Raw(pair.Value)</p>
                    </div>
                }
            }
        </div>
    </div>
</div>

@{
    Func<PlayerMatchData, IHtmlContent> printPlayer = 
        @<tr>
            <td>
                <a href='/Player/@item.PlayerId'>
                    <span>
                        <img src='@Model.Players[item.PlayerId].Avatar'>
                    </span>
                    @Model.Players[item.PlayerId].PersonaName
                </a>
            </td>
            <td class='text-center'>
                @item.FractionName.ToBuilderIcon()
            </td>
            <td class='text-center'>
                @if (item.Abandoned) {
                    <i class="fa fa-times dire" aria-hidden="true"></i>
                }
            </td>
            <td class='text-center'>
                @Html.FormatRatingChange(item.RatingChange)
            </td>
            <td class='text-right'>
                @item.Experience
            </td>
            <td class='text-right'>
                @item.Kills
            </td>
            <td class='text-right'>
                @item.Leaks
            </td>
            <td class='text-right'>
                @item.Builds
            </td>
        </tr>;


    var teams = new int[]{2, 3};
    foreach(int team in teams) {
        <h3 class='@team.GetTeamName().ToLower()'>
            @team.GetTeamName()
            @if (team == Model.Match.Winner) {
                <i class="fa fa-trophy" aria-hidden="true"></i>
            }
        </h3>

        <div class='table-responsive'>
            <table class='match-player-table table table-responsive table-striped table-hover'>
                <col width="20%"><col width="10%"><col width="10%"><col width="12%"><col width="12%"><col width="12%"><col width="12%"><col width="12%">
                <thead>
                    <tr>
                        <th>
                            Player
                        </th>
                        <th class='text-center'>
                            Builder
                        </th>
                        <th class='text-center'>
                            Abandoned
                        </th>
                        <th class='text-center'>
                            Rating
                        </th>
                        <th class='text-right'>
                            Experience
                        </th>
                        <th class='text-right'>
                            Kills
                        </th>
                        <th class='text-right'>
                            Leaks
                        </th>
                        <th class='text-right'>
                            Builds
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        var radiantPlayers = @Model.Match.PlayerDatas.Where(p => p.Team == team);
                        foreach(var player in @radiantPlayers) {
                            @printPlayer(player)
                        }
                    }
                </tbody>
            </table>
        </div>
    }
}

@if (Model.Match.Duels.Count > 0) {
    <h3>Duels</h3>
    <div class='table-responsive'>
        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th class='text-left'>
                        Team
                    </th>
                    @foreach (var duel in Model.Match.Duels) {
                        <th class='text-center'>
                            Duel @duel.Order
                        </th>
                    }
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td class='text-left'>
                        Radiant
                    </td>
                    @foreach(var duel in Model.Match.Duels) {
                        <td class='text-center'>
                            @if (duel.Winner == 2) {
                                    <i class="fa fa-times radiant" aria-hidden="true"></i>
                            }
                        </td>
                    }
                </tr>
                <tr>
                    <td class='text-left'>
                        Dire
                    </td>
                    @foreach(var duel in Model.Match.Duels) {
                        <td class='text-center'>
                            @if (duel.Winner == 3) {
                                    <i class="fa fa-times dire" aria-hidden="true"></i>
                            }
                        </td>
                    }
                </tr>
            </tbody>
        </table>
    </div>
}

