// <auto-generated />
using System;
using LegionTDServerReborn.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LegionTDServerReborn.Migrations
{
    [DbContext(typeof(LegionTdContext))]
    [Migration("20200129101614_DateTimeOffsetToDateTime")]
    partial class DateTimeOffsetToDateTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LegionTDServerReborn.Models.Ability", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<float>("CastRange")
                        .HasColumnType("float");

                    b.Property<float>("Cooldown")
                        .HasColumnType("float");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("GoldCost")
                        .HasColumnType("int");

                    b.Property<int>("ManaCost")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.ToTable("Abilities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ability");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.BugReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("varchar(512) CHARACTER SET utf8mb4")
                        .HasMaxLength(512);

                    b.Property<bool>("Done")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(128) CHARACTER SET utf8mb4")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("BugReports");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Duel", b =>
                {
                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.Property<float>("TimeStamp")
                        .HasColumnType("float");

                    b.Property<int>("Winner")
                        .HasColumnType("int");

                    b.HasKey("MatchId", "Order");

                    b.ToTable("Duels");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Fraction", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Name");

                    b.ToTable("Fractions");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.FractionStatistic", b =>
                {
                    b.Property<string>("FractionName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("LostGames")
                        .HasColumnType("int");

                    b.Property<float>("PickRate")
                        .HasColumnType("float");

                    b.Property<int>("WonGames")
                        .HasColumnType("int");

                    b.HasKey("FractionName", "TimeStamp");

                    b.ToTable("FractionStatistics");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Match", b =>
                {
                    b.Property<int>("MatchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<float>("Duration")
                        .HasColumnType("float");

                    b.Property<bool>("IsTraining")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("LastWave")
                        .HasColumnType("int");

                    b.Property<int>("Winner")
                        .HasColumnType("int");

                    b.HasKey("MatchId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Player", b =>
                {
                    b.Property<long>("SteamId")
                        .HasColumnType("bigint");

                    b.Property<string>("Avatar")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("PersonaName")
                        .HasColumnType("VARCHAR(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci");

                    b.Property<string>("ProfileUrl")
                        .HasColumnType("VARCHAR(511) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci");

                    b.Property<string>("RealName")
                        .HasColumnType("VARCHAR(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci");

                    b.HasKey("SteamId");

                    b.HasIndex("PersonaName");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.PlayerMatchData", b =>
                {
                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Abandoned")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Builds")
                        .HasColumnType("int");

                    b.Property<int>("EarnedGold")
                        .HasColumnType("int");

                    b.Property<int>("EarnedTangos")
                        .HasColumnType("int");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FractionName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Kills")
                        .HasColumnType("int");

                    b.Property<int>("Leaks")
                        .HasColumnType("int");

                    b.Property<int>("LostDuels")
                        .HasColumnType("int");

                    b.Property<int>("RatingChange")
                        .HasColumnType("int");

                    b.Property<int>("Sends")
                        .HasColumnType("int");

                    b.Property<int>("Team")
                        .HasColumnType("int");

                    b.Property<string>("UnitData")
                        .HasColumnType("JSON");

                    b.Property<bool>("Won")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("WonDuels")
                        .HasColumnType("int");

                    b.HasKey("MatchId", "PlayerId");

                    b.HasIndex("FractionName");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerMatchData");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.PlayerUnitRelation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<int>("Build")
                        .HasColumnType("int");

                    b.Property<int>("Killed")
                        .HasColumnType("int");

                    b.Property<int>("Leaked")
                        .HasColumnType("int");

                    b.Property<int>("MatchId")
                        .HasColumnType("int");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Send")
                        .HasColumnType("int");

                    b.Property<string>("UnitName")
                        .IsRequired()
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("UnitName");

                    b.HasIndex("MatchId", "PlayerId");

                    b.ToTable("PlayerUnitRelations");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Ranking", b =>
                {
                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<bool>("Ascending")
                        .HasColumnType("tinyint(1)");

                    b.Property<long>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Type", "Ascending", "PlayerId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("Position");

                    b.ToTable("Rankings");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Unit", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<float>("ArmorPhysical")
                        .HasColumnType("float");

                    b.Property<float>("AttackDamageMax")
                        .HasColumnType("float");

                    b.Property<float>("AttackDamageMin")
                        .HasColumnType("float");

                    b.Property<float>("AttackRange")
                        .HasColumnType("float");

                    b.Property<float>("AttackRate")
                        .HasColumnType("float");

                    b.Property<float>("BountyGoldMax")
                        .HasColumnType("float");

                    b.Property<float>("BountyGoldMin")
                        .HasColumnType("float");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("DisplayName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FractionName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<string>("LegionAttackType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("LegionDefendType")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<float>("MagicResistance")
                        .HasColumnType("float");

                    b.Property<float>("StatusHealth")
                        .HasColumnType("float");

                    b.Property<float>("StatusHealthRegen")
                        .HasColumnType("float");

                    b.Property<float>("StatusMana")
                        .HasColumnType("float");

                    b.Property<float>("StatusManaRegen")
                        .HasColumnType("float");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Name");

                    b.HasIndex("FractionName");

                    b.ToTable("Units");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Unit");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.UnitAbility", b =>
                {
                    b.Property<string>("UnitName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<int>("Slot")
                        .HasColumnType("int");

                    b.Property<string>("AbilityName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasKey("UnitName", "Slot");

                    b.HasIndex("AbilityName");

                    b.ToTable("UnitAbilities");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.UnitStatistic", b =>
                {
                    b.Property<string>("UnitName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Build")
                        .HasColumnType("int");

                    b.Property<int>("GamesBuild")
                        .HasColumnType("int");

                    b.Property<int>("GamesEvaluated")
                        .HasColumnType("int");

                    b.Property<int>("GamesWon")
                        .HasColumnType("int");

                    b.Property<int>("Killed")
                        .HasColumnType("int");

                    b.Property<int>("Leaked")
                        .HasColumnType("int");

                    b.Property<int>("Send")
                        .HasColumnType("int");

                    b.HasKey("UnitName", "TimeStamp");

                    b.ToTable("UnitStatistics");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.SpawnAbility", b =>
                {
                    b.HasBaseType("LegionTDServerReborn.Models.Ability");

                    b.Property<string>("UnitName")
                        .HasColumnType("varchar(255) CHARACTER SET utf8mb4");

                    b.HasIndex("UnitName")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("SpawnAbility");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Builder", b =>
                {
                    b.HasBaseType("LegionTDServerReborn.Models.Unit");

                    b.Property<bool>("Public")
                        .HasColumnType("tinyint(1)");

                    b.HasDiscriminator().HasValue("Builder");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Duel", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Match", "Match")
                        .WithMany("Duels")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.FractionStatistic", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Fraction", "Fraction")
                        .WithMany("Statistics")
                        .HasForeignKey("FractionName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.PlayerMatchData", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Fraction", "Fraction")
                        .WithMany("PlayedMatches")
                        .HasForeignKey("FractionName");

                    b.HasOne("LegionTDServerReborn.Models.Match", "Match")
                        .WithMany("PlayerData")
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegionTDServerReborn.Models.Player", "Player")
                        .WithMany("Matches")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.PlayerUnitRelation", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Unit", "Unit")
                        .WithMany()
                        .HasForeignKey("UnitName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegionTDServerReborn.Models.PlayerMatchData", "PlayerMatch")
                        .WithMany("UnitDatas")
                        .HasForeignKey("MatchId", "PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Ranking", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Player", "Player")
                        .WithMany("Rankings")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.Unit", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Fraction", "Fraction")
                        .WithMany("Units")
                        .HasForeignKey("FractionName");
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.UnitAbility", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Ability", "Ability")
                        .WithMany("Casters")
                        .HasForeignKey("AbilityName");

                    b.HasOne("LegionTDServerReborn.Models.Unit", "Unit")
                        .WithMany("Abilities")
                        .HasForeignKey("UnitName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.UnitStatistic", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Unit", "Unit")
                        .WithMany("Statistics")
                        .HasForeignKey("UnitName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LegionTDServerReborn.Models.SpawnAbility", b =>
                {
                    b.HasOne("LegionTDServerReborn.Models.Unit", "Unit")
                        .WithOne("SpawnAbility")
                        .HasForeignKey("LegionTDServerReborn.Models.SpawnAbility", "UnitName");
                });
#pragma warning restore 612, 618
        }
    }
}
